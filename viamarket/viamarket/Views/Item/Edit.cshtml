@model ViaMarket.Models.ItemViewModel
@using ViaMarket.App_Start;

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Item", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Item</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Id, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Id)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price)
                @Html.ValidationMessageFor(model => model.Price)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Currency", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.IdCurrency, Model.Currencies)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Category", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.IdCategory, Model.Categories)
            </div>
        </div>

        <div class="form-group">
            @for (int i = 0; i < ApplicationConfig.ImgMaxAmountUpload; i++)
            {
                bool imageExisting = Model.Images != null && i < Model.Images.Count();
                if (imageExisting)
                {
                    <div id="img@(i)">
                        <img src="@Url.Content(Model.Images.ElementAt(i).PathPreview)" data-toggle="modal" data-target="#myModal@(Model.Images.ElementAt(i).Id)" />
                        <button onclick="remove(@(Model.Images.ElementAt(i).Id), @(i));" type="button" class="btn btn-default btn-lg">
                            <span class="glyphicon glyphicon-remove"></span>
                        </button>
                        <div id="myModal@(Model.Images.ElementAt(i).Id)" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel@(Model.Images.ElementAt(i).Id)" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-body">
                                        <img src="@Url.Content(Model.Images.ElementAt(i).PathOriginal)" class="img-responsive">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                string style = imageExisting ? "display : none" : "display : inline";
                <div id="upload@(i)" style="@(style)">
                    <input type="file" name="file" />
                </div>

            }
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>
    </div>



    <script type="text/javascript">
        function remove(idImage, nmbr) {
            alert("upload".concat(nmbr));
            document.getElementById("upload".concat(nmbr)).style.display = 'inline';
            document.getElementById("img".concat(nmbr)).style.display = 'none';

        }
    </script>

}